name: ci-pipeline

on:
  push:

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    outputs:
      ghcr_image_name: ${{ steps.parsing.outputs.ghcr_image_name }}
    env:
      LowercaseName: echo "THIS IS MY DATA" | tr '[:upper:]' '[:lower:]'
    steps:
      - name: Checkout module
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/${{ LowercaseName }}
          tags: |
            type=ref,event=branch
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CONTAINER_TOKEN }}
      - uses: int128/kaniko-action@v1
        with:
          file: .docker/Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ghcr.io/${{ LowercaseName }}/cache
          kaniko-args: |
            --cache-copy-layers
      - id: parsing
        name: parse lowercase from github container registry
        run: |
          export github_repository_lc=${GITHUB_REPOSITORY@L}
          export cleaned_ref_name=$(echo $GITHUB_REF_NAME | tr / -)
          echo "cleaned_ref_name=${cleaned_ref_name}" >> "$GITHUB_OUTPUT"
          echo "ghcr_image_name=${github_repository_lc}:${cleaned_ref_name}" >> "$GITHUB_OUTPUT"

  hooks:
    runs-on: ubuntu-latest
    needs: build-docker-image
    container:
      image: ghcr.io/${{ needs.build-docker-image.outputs.ghcr_image_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Run pre-commit on all files
        uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    needs: build-docker-image
    container:
      image: ghcr.io/${{ needs.build-docker-image.outputs.ghcr_image_name }}
    steps:
      - name: Run pytest
        run: |
          pytest --ignore=continuity
