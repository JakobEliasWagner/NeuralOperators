[build-system]
requires = ["poetry-core>=1.2.0", "wheel"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "nos"
version = "0.1.0"
description = "A project containing asses for neural operator learning in acousics."

authors = ["Jakob Wagner <mail@jakob-wagner.com>"]
maintainers = ["Jakob Wagner <mail@jakob-wagner.com>"]

include = ["CHANGELOG.md", "LICENSE"]
license = "MIT"
readme = "README.md"

packages = [{ include = "nos", from = "src" }]


repository = "https://github.com/JakobEliasWagner/NeuralOperators"

keywords = [
    "python3",
    "Artificial Intelligence",
    "Mathematics",
    "Physics",
    "Neural Operators",
    "Helmholtz",
    "Sonic Crystal",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.26.2"
matplotlib = "^3.8.2"
seaborn = "^0.13.2"
pandas = "^2.2.2"
loguru = "^0.7.2"
hydra-core = "^1.3.2"
optuna-dashboard = "^0.14.0"
torch = "^2.1.0"
continuiti = "^0.2.0"
h5py = "^3.11.0"
mlflow = "^2.16.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = ">=0.5.6"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^8.0.2"

[tool.poetry.group.optimize]
optional = true

[tool.poetry.group.optimize.dependencies]
optuna = "^4.0.0"
hydra-core = "^1.3.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "PLR0913",
    "E401",    # multiple imports on one line
    "D203",    # no blank line before class
    "D213",    # multi line summary second line
]
line-length = 120
# preview = true
show-fixes = true
src = ["src"]
target-version = "py310"


[tool.ruff-lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"

[tool.pylint.similarity]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
ignore-signatures = true
min-similarity-lines = 5

[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # unused import
    "F403", # undefined local with import star
    "F405", #  undefined local with import star usage
]
"tests/*" = [
    "ANN",    # flake8-annotations
    "ARG",    # flake8-unused-arguments
    "INP001", # implicit namespace package
    "S101",   # use of assert detected
    "D100",   # missing docstring in public module
    "D101",   # undocumented public class
    "D102",   # undocumented public method
    "D103",   # missing docstring in public function
    "D104",   # missing docstring in public module
]
"scritps/*" = [
    "ALL"
]


[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (> 5s)"]
