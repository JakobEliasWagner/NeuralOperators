[tool.poetry]
name = "Neural-Operators"
version = "0.1.0"
authors = ["Jakob Elias Wagner <mail@jakob-wagner.org>"]
description = "Use Neural Operators for parameterized sonic crystals"
readme = "README.md"
license = "GPL-3.0-or-later"
homepage = "https://github.com/JakobEliasWagner/Neural-Operators/tree/feature/transmission-loss-dataset"
repository = "https://github.com/JakobEliasWagner/Neural-Operators/tree/feature/transmission-loss-dataset"
documentation = "https://jakobeliaswagner.github.io/Neural-Operators/index.html"
keywords = [
    "Artificial Intelligence",
    "Mathematics",
    "Physics",
    "Neural Operators",
    "Helmholtz",
    "Sonic Crystal",
]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Development Status :: 3 - Alpha",
]
packages = [
    { include = "nos", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.11.0"
numpy = "1.26.2"
matplotlib = "3.8.2"
seaborn = "0.13.2"
pandas = "2.1.4"
loguru = "0.7.2"
continuity = { path = "./continuity", develop = true }

[tool.poetry.group.gpu.dependencies]
torch = "2.1.0"

[tool.poetry.group.cpu]
optional = true
[tool.poetry.group.cpu.dependencies]
torch = { source = "pytorch-cpu", version = "2.1.0" }

[tool.poetry.group.optimize.dependencies]
optuna = "3.5.0"
mlflow = "2.10.2"

[tool.poetry.group.test.dependencies]
pytest = "7.4.4"
pytest-cov = "4.1.0"

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
black = "24.1.1"
ruff = "0.1.13"
isort = "5.13.2"
pre-commit = "3.6.0"

[tool.poetry.group.doc]
optional = true
[tool.poetry.group.doc.dependencies]
sphinx = "*"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 119
skip_glob = [
    ".github/*",
    ".idea/*",
    ".pytest_cache/*",
    "data/*",
    "doc/*",
    "models/*",
    "venv/*",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 119
indent-width = 4

[tool.coverage.report]
omit = [
    # omit anything in a .local directory anywhere
    '*/.local/*',
    '__init__.py',
    '.venv/*'
]
exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "@(abc\\.)?abstractmethod",
]
skip_empty = true

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (> 5s)",
]
